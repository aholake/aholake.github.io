[
  {
    "id": 1,
    "title": "How to deploy a React application to Github page?",
    "description": "Github gives us a free domain and repository to create own page, instead of creating a boring static page, can we make it as a dynamic single web app?. In this article, I would like to show you how to make and deploy a simple React project to Github page",
    "content": "All we knew that, Github gives us a free personal domain and storage to serve your own static web application.\nDo you think that you can build a awesome and professional web app to there. \n\nYay, it's true. Today I gonna show you how to deploy a React application from the zero footprint in 5 minutes.\n\n### Okay, let's started!!\n\n#### Create a repository for your page.\nHead over to GitHub and create a new public repository named username.github.io, where username is your username (or organization name) on GitHub.\n![alt text](https://i.imgur.com/EkehH3e.png \"Logo Title Text 1\")\n\n#### Initialize your React application.\nThere is many ways to initilize your React application. But for me, I recommend you to use create-react-app project to make it simple.\nIn the terminal, just typing: \n````bash\nnpx create-react-app <app_name>\n````\nIf you want your application support typescript, you just add the template argument.\n````bash\nnpx create-react-app <app_name> -template typescript\n````\nAfter the script run successfully, try start your boilterplate application by running:\n````bash\nyarn install && yarn run start\n````\nCheck again your application by browsing the **localhost** in port **3000**\n\n#### Add Gh-Pages dependency and setup deployment scripts\nFirst of all, you need to add your git remote to your local repository:\n````bash\ngit remote add origin git@github.com:<username>/<username>.github.io.git\n````\nNext step, install the gh-pages dependency:\n````bash\nyarn add gh-pages\n````\nOpen your package.json and append more 2 scripts into scripts tag:\n````json\n{ \n  \"scripts\": {\n    \"predeploy\": \"yarn run build\",\n    \"deploy\": \"gh-pages -d build\"\n  }\n}\n````\n \n\n#### Build and deploy your application\nFor above steps, you just finish ~80% workload. Now, just do your first deployment by running:\n````bash\nyarn run deploy\n````\nNow, let's check your site by browsing to <username>.github.io\n\n### Enjoy it!!!",
    "createdAt": "2020-12-02",
    "createdBy": "Loc Vo",
    "tags": ["Programming", "React"]
  },
  {
    "id": 2,
    "title": "Some apps help to plan and enjoy your trip",
    "description": "Github gives us a free domain and repository to create own page, instead of creating a boring static page, can we make it as a dynamic single web app?. In this article, I would like to show you how to make and deploy a simple React project to Github page",
    "content": "",
    "createdAt": "2020-12-05",
    "createdBy": "Loc Vo",
    "tags": ["Travel", "Life Hack"]
  },
  {
    "id": 3,
    "title": "Create a microservice with Quarkus",
    "description": "Github gives us a free domain and repository to create own page, instead of creating a boring static page, can we make it as a dynamic single web app?. In this article, I would like to show you how to make and deploy a simple React project to Github page",
    "content": "<p><em>In this article, I would like to show you how to deploy a React application to your Github page.</em></p>\n\n<p><em>1. Create a repository for your page.</em></p>\n\n<p>Head over to GitHub and create a new public repository named username.github.io, where username is your username (or organization name) on GitHub.<br />\n<img alt=\"\" src=\"https://i.imgur.com/EkehH3e.png\" style=\"height:474px; width:659px\" /></p>\n",
    "createdAt": "2020-11-02",
    "createdBy": "Loc Vo",
    "tags": ["Programming", "Architecture"]
  },
  {
    "id": 4,
    "title": "Javalin - What is it?",
    "description": "Github gives us a free domain and repository to create own page, instead of creating a boring static page, can we make it as a dynamic single web app?. In this article, I would like to show you how to make and deploy a simple React project to Github page",
    "content": "<p><em>In this article, I would like to show you how to deploy a React application to your Github page.</em></p>\n\n<p><em>1. Create a repository for your page.</em></p>\n\n<p>Head over to GitHub and create a new public repository named username.github.io, where username is your username (or organization name) on GitHub.<br />\n<img alt=\"\" src=\"https://i.imgur.com/EkehH3e.png\" style=\"height:474px; width:659px\" /></p>\n",
    "createdAt": "2021-01-31",
    "createdBy": "Loc Vo",
    "tags": ["Programming", "Java"]
  },
  {
    "id": 5,
    "title": "[JPA] Persist bidirectional entity to database using Entity Manager",
    "description": "",
    "content": "#### Persist a bidirectional entity using JPA\nFor example, we have 2 entities like this\n````java\n@Entity\nclass Product {\n  @Id\n  private Long id;\n\n  private String name; \n\n  @ManyToOne\n  private Category category;\n}\n````\n````java\n@Entity\nclass Category {\n  @Id\n  private Long id;\n\n  private String name;\n\n  @OneToMany(mappedBy=\"category\")\n  private List<Product> products;\n}\n````\nHow we can persist cascade the object like this to DB.\n````java\nEntityManager em = // inject entity manager\n\nProduct product = new Product()\nproduct.setName(\"Television\");\n\nCategory category = new Category();\ncategory.setName(\"Electronic\");\n\nproduct.setCategory(category)\ncategory.setProducts(Collections.single(product));\n\nreturn em.merge(product);\n````",
    "createdAt": "2021-02-02",
    "createdBy": "Loc Vo",
    "tags": ["Programming", "Java"]
  }
]
